{"version":3,"file":"static/webpack/static/development/pages/tag.js.1978d4797409013fd334.hot-update.js","sources":["webpack:///./node_modules/isomorphic-unfetch/browser.js","webpack:///./node_modules/isomorphic-unfetch/node_modules/unfetch/dist/unfetch.mjs","webpack:///./pages/tag.js"],"sourcesContent":["module.exports = window.fetch || (window.fetch = require('unfetch').default || require('unfetch'));\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest;for(var o in s.open(n.method||\"get\",e,!0),n.headers)s.setRequestHeader(o,n.headers[o]);function u(){var e,n=[],t=[],r={};return s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(s,o,u){n.push(o=o.toLowerCase()),t.push([o,u]),r[o]=(e=r[o])?e+\",\"+u:u}),{ok:2==(s.status/100|0),status:s.status,statusText:s.statusText,url:s.responseURL,clone:u,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},headers:{keys:function(){return n},entries:function(){return t},get:function(e){return r[e.toLowerCase()]},has:function(e){return e.toLowerCase()in r}}}}s.withCredentials=\"include\"==n.credentials,s.onload=function(){t(u())},s.onerror=r,s.send(n.body||null)})};\n//# sourceMappingURL=unfetch.mjs.map\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport Container from \"../components/Container\";\nimport ReadingContainer from \"../components/ReadingContainer\";\nimport ListItem from \"../components/ListItem\";\n\nconst Title = styled.h2`\n  align-items: center;\n  display: flex;\n  font-size: 34px;\n  line-height: 1.15;\n\n  @media screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nconst Subtitle = styled.div`\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 23px;\n  font-weight: 400;\n  line-height: 28px;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 1199px) {\n    font-size: 20px;\n    line-height: 24px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Divider = styled.div`\n  display: block;\n  font-size: 35px;\n  letter-spacing: 0.6em;\n  text-align: center;\n`;\n\nconst LinkTag = styled.a`\n  color: #689f38;\n  text-decoration: none;\n`;\n\nconst Tag = ({ title, subtitle, description, posts = [] }) => {\n  if (!title) {\n    return [<h1>Tag not found</h1>, <a href=\"/\">Bible Answers Home</a>];\n  }\n\n  const pageTitle = `${\n    posts.length\n  } \"${title}\" Questions and Answers | Bible Answers`;\n\n  return (\n    <Container>\n      <title>{pageTitle}</title>\n\n      <ReadingContainer style={{ marginBottom: 0 }}>\n        <Title>\n          {posts.length} \"{title}\" Questions and Answers\n        </Title>\n        <Subtitle>{subtitle}</Subtitle>\n        <Divider>...</Divider>\n      </ReadingContainer>\n      <br />\n      <ReadingContainer style={{ padding: 0, width: \"initial\" }}>\n        {posts.map(post => {\n          return (\n            <LinkTag href={post.url} key={post.url}>\n              <ListItem {...post} />\n            </LinkTag>\n          );\n        })}\n      </ReadingContainer>\n    </Container>\n  );\n};\n\nTag.getInitialProps = async function({ query }) {\n  const res = await fetch(\n    `https://bibleanswersapi.herokuapp.com/tags/${query.slug}`\n  );\n  const data = await res.json();\n\n  return data;\n};\n\nexport default Tag;\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAWA;AAcA;AAOA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}