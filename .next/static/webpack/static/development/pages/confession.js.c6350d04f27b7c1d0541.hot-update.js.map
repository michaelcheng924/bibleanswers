{"version":3,"file":"static/webpack/static/development/pages/confession.js.c6350d04f27b7c1d0541.hot-update.js","sources":["webpack:///./components/ConfessionParagraph.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport css from \"classnames\";\nimport axios from \"axios\";\n\nconst ConfessionParagraph = ({ paragraph, index }) => {\n  const [activeScripture, setActiveScripture] = useState(null);\n  const [activeScriptureText, setActiveScriptureText] = useState(null);\n\n  return (\n    <div>\n      <h4>Chapter {index + 1}</h4>\n      <p>\n        {paragraph.map(section => {\n          return (\n            <span key={section.superscript}>\n              {section.text}\n              <a\n                href={`#ref-${index}-${section.superscript}`}\n                id={`${index}-${section.superscript}`}\n                className=\"superscript\"\n              >{`${section.superscript} `}</a>\n            </span>\n          );\n        })}\n      </p>\n\n      <div className=\"scripture-section\">\n        <p className=\"nomargin\">\n          <strong>References (click to view)</strong>\n        </p>\n        {paragraph.map(section => {\n          return (\n            <p key={section.superscript} className=\"nomargin\">\n              <a\n                href={`#${index}-${section.superscript}`}\n                id={`ref-${index}-${section.superscript}`}\n              >\n                {`^ `}\n              </a>\n              <strong>{section.superscript}.</strong>{\" \"}\n              {section.scriptures.map((scripture, index) => {\n                const classNames = css(\"scripture\", {\n                  \"scripture--active\": scripture === activeScripture\n                });\n\n                return (\n                  <span key={scripture}>\n                    <span\n                      className={classNames}\n                      onClick={() => {\n                        const savedActiveScripture =\n                          scripture === activeScripture ? null : scripture;\n\n                        setActiveScripture(savedActiveScripture);\n\n                        if (savedActiveScripture) {\n                          axios\n                            .get(\n                              `https://bibleanswersapi.herokuapp.com/passages?passages=${encodeURIComponent(\n                                savedActiveScripture\n                              )}`\n                            )\n                            .then(response => {\n                              setActiveScriptureText(response.data.passages);\n                            });\n                        } else {\n                          setActiveScriptureText(null);\n                        }\n                      }}\n                    >\n                      {scripture}\n                    </span>\n                    {index === section.scriptures.length - 1 ? \"\" : `, `}\n                  </span>\n                );\n              })}\n            </p>\n          );\n        })}\n\n        {activeScriptureText ? (\n          <div>\n            {activeScriptureText.map((passage, index) => {\n              return (\n                <p key={index} dangerouslySetInnerHTML={{ __html: passage }} />\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n\n      <style jsx>{`\n        h4 {\n          font-size: 26px;\n          line-height: 1.22;\n          margin: 0;\n          margin-top: 30px;\n        }\n\n        p {\n          font-size: 21px;\n          line-height: 1.58;\n          margin: 0;\n          margin-top: 29px;\n        }\n\n        h4 + p {\n          margin-top: 8px;\n        }\n\n        .first {\n          margin-top: 8px;\n        }\n\n        .nomargin {\n          margin-top: 0;\n        }\n\n        a {\n          color: #689f38;\n          text-decoration: none;\n        }\n\n        @media screen and (max-width: 768px) {\n          h4 {\n            font-size: 24px;\n            margin-top: 22px;\n          }\n\n          p {\n            font-size: 18px;\n            margin-top: 21px;\n          }\n        }\n\n        .superscript {\n          color: #689f38;\n          font-size: 15px;\n          margin-left: 1px;\n          position: relative;\n          top: -6px;\n        }\n\n        .scripture-section {\n          border: 1px solid #bdbdbd;\n          margin-top: 20px;\n          padding: 5px 10px;\n        }\n\n        .scripture {\n          color: rgba(0, 0, 0, 0.54);\n          cursor: pointer;\n        }\n\n        .scripture--active {\n          color: rgba(0, 0, 0, 0.84);\n          font-weight: bold;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ConfessionParagraph;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAOA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAMA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AA4BA;AAGA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA7EA;AAAA;AAAA;AAwJA;AACA;AACA;;;;A","sourceRoot":""}