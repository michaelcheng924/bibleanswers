{"version":3,"file":"static/webpack/static/development/pages/admin.js.38174e09f5c0991a89a9.hot-update.js","sources":["webpack:///./components/PostEditor.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Textarea from \"react-textarea-autosize\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport { defer, find } from \"lodash\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\n\nimport { getModifiedContent } from \"../utils/writing\";\nimport ReadingContainer from \"./ReadingContainer\";\nimport CreateTag from \"./CreateTag\";\n\nconst HTML_PRESS_MAPPINGS = [\n  {\n    key1: 17,\n    key2: 72,\n    addition: \"<h3></h3>\",\n    cursorOffset: 4\n  },\n  {\n    key1: 17,\n    key2: 74,\n    addition: \"<h4></h4>\",\n    cursorOffset: 4\n  },\n  {\n    key1: 17,\n    key2: 80,\n    addition: \"<p></p>\",\n    cursorOffset: 3\n  },\n  {\n    key1: 17,\n    key2: 66,\n    addition: \"<blockquote></blockquote>\",\n    cursorOffset: 12\n  },\n  {\n    key1: 17,\n    key2: 83,\n    addition: \"<strong></strong>\",\n    cursorOffset: 8\n  },\n  {\n    key1: 17,\n    key2: 85,\n    addition: `<ul>\n    <li></li>\n  </ul>`,\n    cursorOffset: 13\n  },\n  {\n    key1: 17,\n    key2: 79,\n    addition: `<ol>\n    <li></li>\n  </ol>`,\n    cursorOffset: 13\n  },\n  {\n    key1: 17,\n    key2: 76,\n    addition: \"<li></li>\",\n    cursorOffset: 4\n  },\n  {\n    key1: 17,\n    key2: 70,\n    addition: ' class=\"first\"',\n    cursorOffset: 15,\n    nowrap: true\n  }\n];\n\nclass PostEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.keys = {};\n\n    this.state = {\n      post: props.post,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n    document.addEventListener(\"keyup\", this.handleKeyPress);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.post.id && this.props.post.id) {\n      this.setState({ post: this.props.post });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n    document.removeEventListener(\"keyup\", this.handleKeyPress);\n  }\n\n  handleKeyPress = e => {\n    this.keys[e.keyCode] = e.type === \"keydown\";\n\n    if (this.keys[17] && this.keys[90]) {\n      this.onSave();\n    }\n\n    if (this.keys[17] && this.keys[65]) {\n      this.props.onSetPost(null);\n    }\n  };\n\n  getMappedTags(tags) {\n    if (!tags) {\n      return [];\n    }\n\n    return tags.map(tag => {\n      return { label: tag.title, value: tag.id };\n    });\n  }\n\n  onChange = event => {\n    const { post } = this.state;\n    const { name, value } = event.target;\n\n    const updatedPost = {\n      ...post,\n      [name]: value\n    };\n\n    if (name === \"slug\") {\n      updatedPost.url = `/answers/${value}`;\n    }\n\n    this.setState({ post: updatedPost });\n  };\n\n  onHtmlChange = html => {\n    this.setState({\n      post: {\n        ...this.state.post,\n        html\n      }\n    });\n  };\n\n  onHtmlPress = e => {\n    e.persist();\n\n    const { post } = this.state;\n    const index = e.target.selectionStart;\n\n    this.keys[e.keyCode] = e.type === \"keydown\";\n\n    let done = false;\n\n    HTML_PRESS_MAPPINGS.forEach(item => {\n      if (done) {\n        return;\n      }\n\n      const { key1, key2, addition, cursorOffset } = item;\n\n      if (this.keys[key1] && this.keys[key2]) {\n        const newHtml = `${post.html.slice(\n          0,\n          index\n        )}${addition}${post.html.slice(index)}`;\n\n        this.setState(\n          {\n            post: {\n              ...post,\n              html: newHtml\n            }\n          },\n          () => {\n            setTimeout(() => {\n              e.target.selectionStart = index + cursorOffset;\n              e.target.selectionEnd = index + cursorOffset;\n            });\n          }\n        );\n\n        done = true;\n      }\n    });\n  };\n\n  onSelectChange = value => {\n    const newTagsList = value.map(tag => {\n      return find(this.props.tags, tagData => tagData.id === tag.value);\n    });\n\n    this.setState({\n      post: {\n        ...this.state.post,\n        tags: newTagsList\n      }\n    });\n  };\n\n  onSelectRelatedChange = value => {\n    this.setState({\n      post: {\n        ...this.state.post,\n        mapped_related_posts_tags: value.map(tag => {\n          return find(this.props.tags, tagData => tagData.id === tag.value);\n        })\n      }\n    });\n  };\n\n  onPublishedChange = () => {\n    const { post } = this.state;\n\n    const updatedPost = {\n      ...post,\n      published: !post.published\n    };\n\n    this.setState({ post: updatedPost });\n  };\n\n  onSave = () => {\n    const { headers, history, onFetchPostsTags } = this.props;\n    const { post } = this.state;\n\n    let finalPost = {\n      ...post,\n      tag_ids: post.tags.map(tag => tag.id),\n      related_posts_tags: post.mapped_related_posts_tags\n        .map(tag => tag.id)\n        .join(\",\")\n    };\n    delete finalPost.tags;\n\n    let method = \"post\";\n    let url = \"http://bibleanswersapi.herokuapp.com/posts\";\n\n    if (post.id) {\n      method = \"patch\";\n      url = `http://bibleanswersapi.herokuapp.com/posts/${post.id}`;\n    }\n\n    axios[method](url, finalPost, headers).then(() => {\n      this.setState({ success: true }, () => {\n        setTimeout(() => {\n          this.setState({ success: false });\n        }, 500);\n      });\n      onFetchPostsTags().then(() => {\n        if (!post.id) {\n          defer(() => {\n            history.push(`/admin/post/${post.slug}`);\n            this.forceUpdate();\n          });\n        }\n      });\n    });\n  };\n\n  deletePost() {\n    const confirm = window.confirm(\"Are you sure?\");\n\n    if (confirm) {\n      axios\n        .delete(\n          `http://bibleanswersapi.herokuapp.com/posts/${this.state.post.id}`\n        )\n        .then(() => {\n          this.props.onFetchPostsTags().then(() => {\n            this.props.history.push(\"/admin\");\n          });\n        });\n    }\n  }\n\n  renderSaveButtons() {\n    const { success } = this.state;\n\n    return (\n      <div className=\"admin__save-buttons\">\n        {success ? (\n          <div\n            style={{\n              background: \"#43A047\",\n              color: \"#fff\",\n              padding: \"5px 10px\"\n            }}\n          >\n            SUCCESS!\n          </div>\n        ) : null}\n        <input\n          type=\"checkbox\"\n          onChange={this.onPublishedChange}\n          checked={this.state.post.published}\n        />\n        Published\n        <button className=\"small\" onClick={this.onSave}>\n          Save\n        </button>\n      </div>\n    );\n  }\n\n  renderHtml() {\n    const { post } = this.state;\n\n    const modifiedContent = getModifiedContent(post);\n\n    return (\n      <div>\n        <div className=\"post-editor__html-container\">\n          <Editor\n            className=\"post-editor__html-content\"\n            value={post.html}\n            onValueChange={this.onHtmlChange}\n            onKeyDown={this.onHtmlPress}\n            onKeyUp={this.onHtmlPress}\n            highlight={code => highlight(code, languages.js)}\n            padding={10}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 16\n            }}\n          />\n          <div\n            className=\"post-editor__html-content\"\n            dangerouslySetInnerHTML={{ __html: modifiedContent }}\n            ref={htmlEl => (this.htmlEl = htmlEl)}\n          />\n        </div>\n        {this.htmlEl && this.htmlEl.innerText.split(\" \").length}\n      </div>\n    );\n  }\n\n  render() {\n    const { headers, tags } = this.props;\n    const { post } = this.state;\n    const {\n      id,\n      slug,\n      url,\n      title,\n      description,\n      subtitle,\n      image_url,\n      image_url_small,\n      references,\n      date_added,\n      mapped_related_posts_tags\n    } = post;\n\n    return (\n      <div>\n        <a href=\"/admin\">\n          <button>Admin Home</button>\n        </a>\n        {this.renderSaveButtons()}\n        {/* <div>{JSON.stringify(post)}</div> */}\n        <ReadingContainer style={{ margin: \"20px auto\" }}>\n          <div>ID: {id}</div>\n          <div>\n            <strong>slug: </strong>\n          </div>\n          <Textarea\n            onChange={this.onChange}\n            name=\"slug\"\n            placeholder=\"slug\"\n            value={slug}\n          />\n          <div>\n            <strong>url: </strong>\n          </div>\n          <Textarea\n            disabled\n            onChange={this.onChange}\n            name=\"url\"\n            placeholder=\"url\"\n            value={url || \"\"}\n          />\n          <div>\n            <strong>title: </strong>\n          </div>\n          <Textarea\n            onChange={this.onChange}\n            name=\"title\"\n            placeholder=\"Title\"\n            value={title}\n          />\n          <div>\n            <strong>description: </strong>\n          </div>\n          <Textarea\n            onChange={this.onChange}\n            name=\"description\"\n            placeholder=\"Description\"\n            value={description || \"\"}\n          />\n          <div>{160 - (description || \"\").length}</div>\n          <div>\n            <strong>tags: </strong>\n          </div>\n          <Select\n            value={this.getMappedTags(post.tags)}\n            isMulti\n            name=\"colors\"\n            onChange={this.onSelectChange}\n            options={this.getMappedTags(tags)}\n          />\n          <div>\n            <strong>related_posts_tags: </strong>\n          </div>\n          <Select\n            value={this.getMappedTags(mapped_related_posts_tags)}\n            isMulti\n            name=\"colors\"\n            onChange={this.onSelectRelatedChange}\n            options={this.getMappedTags(tags)}\n          />\n          <div>\n            <strong>subtitle: </strong>\n          </div>\n          <Textarea\n            onChange={this.onChange}\n            name=\"subtitle\"\n            placeholder=\"Subtitle\"\n            value={subtitle}\n          />\n          <div>\n            <strong>date_added: </strong>\n          </div>\n          <Textarea\n            onChange={this.onChange}\n            name=\"date_added\"\n            placeholder=\"date_added\"\n            value={date_added}\n          />\n\n          <CreateTag headers={headers} />\n          <div className=\"post-editor__images\">\n            <div>\n              <div>\n                <strong>image_url: </strong>\n              </div>\n              <Textarea\n                onChange={this.onChange}\n                name=\"image_url\"\n                placeholder=\"image_url\"\n                value={image_url || \"\"}\n              />\n              <img src={image_url} alt={title} style={{ width: 300 }} />\n            </div>\n            <div>\n              <div>\n                <strong>image_url_small: </strong>\n              </div>\n              <Textarea\n                onChange={this.onChange}\n                name=\"image_url_small\"\n                placeholder=\"image_url_small\"\n                value={image_url_small || \"\"}\n              />\n              <img src={image_url_small} alt={title} style={{ width: 100 }} />\n            </div>\n          </div>\n\n          <div>\n            <strong>references: </strong>\n          </div>\n          <Textarea\n            onChange={this.onChange}\n            name=\"references\"\n            placeholder=\"references\"\n            value={references || \"\"}\n          />\n        </ReadingContainer>\n        {this.renderHtml()}\n        <button className=\"small danger\" onClick={this.deletePost}>\n          Delete\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PostEditor;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAGA;AANA;AASA;AACA;AACA;AAGA;AANA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAmDA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAlEA;AAoEA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AA3EA;AA6EA;AADA;AAIA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAIA;AAEA;AAEA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAtHA;AAwHA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AAnIA;AAqIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAJA;AADA;AAQA;AACA;AA9IA;AA+IA;AACA;AAEA;AAEA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAzJA;AA0JA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAJA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA5LA;AAEA;AACA;AACA;AAFA;AALA;AASA;AACA;;;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AA+IA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AADA;AAWA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAKA;;;AAEA;AAAA;AACA;AADA;AAGA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AARA;AAcA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AASA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAEA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAKA;;;;AAjaA;AACA;AAmaA;;;;A","sourceRoot":""}