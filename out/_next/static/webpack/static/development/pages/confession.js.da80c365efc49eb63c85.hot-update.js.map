{"version":3,"file":"static/webpack/static/development/pages/confession.js.da80c365efc49eb63c85.hot-update.js","sources":["webpack:///./components/ConfessionParagraph.js","webpack:///./pages/confession.js"],"sourcesContent":["import React from \"react\";\n\nconst ConfessionParagraph = ({ section, index }) => {\n  return (\n    <div>\n      <h4>Chapter {index + 1}</h4>\n      <p>\n        {paragraph.map(section => {\n          return (\n            <span key={section.superscript}>\n              {section.text}\n              <a\n                href={`#ref-${index}-${section.superscript}`}\n                id={`${index}-${section.superscript}`}\n                className=\"superscript\"\n              >{`${section.superscript} `}</a>\n            </span>\n          );\n        })}\n      </p>\n\n      <div className=\"scripture-section\">\n        <p className=\"nomargin\">\n          <strong>References (click to view)</strong>\n        </p>\n        {paragraph.map(section => {\n          return (\n            <p key={section.superscript} className=\"nomargin\">\n              <a\n                href={`#${index}-${section.superscript}`}\n                id={`ref-${index}-${section.superscript}`}\n              >\n                {`^ `}\n              </a>\n              <strong>{section.superscript}.</strong>{\" \"}\n              <span className=\"scripture\">{section.scriptures}</span>\n            </p>\n          );\n        })}\n\n        <p className=\"first\">\n          <em>Click on a Scripture above to view passage</em>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfessionParagraph;\n","import React from \"react\";\nimport Head from \"next/head\";\nimport { findIndex, isString } from \"lodash\";\n\nimport LONDON_BAPTIST from \"../constants/confessions/london-baptist\";\nimport { Container } from \"../components/Container\";\nimport { TitleSection } from \"../components/TitleSection\";\nimport ReadingContainer from \"../components/ReadingContainer\";\nimport ConfessionNav from \"../components/ConfessionNav\";\nimport ConfessionParagraph from \"../components/ConfessionParagraph\";\n\nconst Confession = ({\n  chapterList,\n  name,\n  image_url,\n  chapter,\n  chapters,\n  title,\n  content,\n  previous,\n  next\n}) => (\n  <Container>\n    <Head>\n      <title>\n        {chapterList ? `Chapter list for the ${name}` : `${chapter}. ${title}`}{\" \"}\n        - ${name} | Bible Answers\n      </title>\n\n      <meta\n        name=\"description\"\n        content={`This is \"${chapter}. ${title}\" of the ${name}. Read the ${name} while easily viewing Scripture references.`}\n      />\n    </Head>\n\n    <TitleSection\n      title={\n        chapterList ? `Chapter list for the ${name}` : `${chapter}. ${title}`\n      }\n      subtitle={`Read and explore the ${name}`}\n      image_url={image_url}\n    />\n    <ReadingContainer>\n      <div className=\"writing\">\n        {chapterList ? null : (\n          <ConfessionNav\n            previous={\n              previous\n                ? {\n                    href: `/confessions/${previous.slug}`,\n                    label: `${\n                      previous.chapter === \"Preface\" ? \"\" : \"Chapter\"\n                    } ${previous.chapter}. ${previous.title}`\n                  }\n                : null\n            }\n            next={\n              next\n                ? {\n                    href: `/confessions/${next.slug}`,\n                    label: `${next.chapter === \"Preface\" ? \"\" : \"Chapter\"} ${\n                      next.chapter\n                    }. ${next.title}`\n                  }\n                : null\n            }\n          />\n        )}\n\n        {chapterList\n          ? chapters.map(chapter => (\n              <a key={chapter.chapter} href={`/confessions/${chapter.slug}`}>\n                <p className=\"first\">\n                  {chapter.chapter}. {chapter.title}\n                </p>\n              </a>\n            ))\n          : null}\n\n        {content\n          ? content.map((paragraph, index) => {\n              if (isString(paragraph)) {\n                return <p>{paragraph}</p>;\n              }\n\n              return (\n                <div key={index}>\n                  <h4>Chapter {index + 1}</h4>\n                  <p>\n                    {paragraph.map(section => {\n                      return (\n                        <span key={section.superscript}>\n                          {section.text}\n                          <a\n                            href={`#ref-${index}-${section.superscript}`}\n                            id={`${index}-${section.superscript}`}\n                            className=\"superscript\"\n                          >{`${section.superscript} `}</a>\n                        </span>\n                      );\n                    })}\n                  </p>\n\n                  <div className=\"scripture-section\">\n                    <p className=\"nomargin\">\n                      <strong>References (click to view)</strong>\n                    </p>\n                    {paragraph.map(section => {\n                      return (\n                        <p key={section.superscript} className=\"nomargin\">\n                          <a\n                            href={`#${index}-${section.superscript}`}\n                            id={`ref-${index}-${section.superscript}`}\n                          >\n                            {`^ `}\n                          </a>\n                          <strong>{section.superscript}.</strong>{\" \"}\n                          <span className=\"scripture\">\n                            {section.scriptures}\n                          </span>\n                        </p>\n                      );\n                    })}\n\n                    <p className=\"first\">\n                      <em>Click on a Scripture above to view passage</em>\n                    </p>\n                  </div>\n                </div>\n              );\n            })\n          : null}\n\n        {chapterList ? null : (\n          <ConfessionNav\n            previous={\n              previous\n                ? {\n                    href: `/confessions/${previous.slug}`,\n                    label: `${\n                      previous.chapter === \"Preface\" ? \"\" : \"Chapter\"\n                    } ${previous.chapter}. ${previous.title}`\n                  }\n                : null\n            }\n            next={\n              next\n                ? {\n                    href: `/confessions/${next.slug}`,\n                    label: `${next.chapter === \"Preface\" ? \"\" : \"Chapter\"} ${\n                      next.chapter\n                    }. ${next.title}`\n                  }\n                : null\n            }\n          />\n        )}\n      </div>\n    </ReadingContainer>\n\n    <style jsx>{`\n      .writing h3 {\n        font-size: 34px;\n        line-height: 1.15;\n        margin: 0;\n        margin-top: 56px;\n      }\n\n      .writing h4 {\n        font-size: 26px;\n        line-height: 1.22;\n        margin: 0;\n        margin-top: 30px;\n      }\n\n      .writing h3 + p,\n      .writing h3 + ol,\n      .writing h3 + ul,\n      .writing h3 + blockquote,\n      .writing h4 + p,\n      .writing h4 + ol,\n      .writing h4 + ul,\n      .writing h4 + blockquote {\n        margin-top: 8px;\n      }\n\n      .writing p,\n      .writing ol,\n      .writing ul,\n      .writing blockquote {\n        font-size: 21px;\n        line-height: 1.58;\n        margin: 0;\n        margin-top: 29px;\n      }\n\n      .writing ol,\n      .writing ul {\n        padding: 0 40px;\n      }\n\n      .writing li {\n        margin-bottom: 10px;\n      }\n\n      .writing li:last-child {\n        margin-bottom: 0;\n      }\n\n      .writing blockquote {\n        border-left: 3px solid rgba(0, 0, 0, 0.84);\n        font-style: italic;\n        left: -20px;\n        padding-left: 20px;\n        position: relative;\n      }\n\n      .writing .first {\n        margin-top: 8px;\n      }\n\n      .writing .nomargin {\n        margin-top: 0;\n      }\n\n      .writing .indent {\n        margin-left: 20px;\n      }\n\n      .writing .image {\n        margin-top: 29px;\n      }\n\n      .writing .image-left {\n        float: left;\n        margin-right: 20px;\n      }\n\n      .writing .image-right {\n        float: right;\n        margin-left: 20px;\n      }\n\n      .writing a {\n        color: #689f38;\n        text-decoration: none;\n      }\n\n      .writing .reference {\n        font-size: 14px;\n        margin-left: 2px;\n        position: relative;\n        top: -5px;\n      }\n\n      @media screen and (max-width: 768px) {\n        .writing h3 {\n          font-size: 30px;\n          margin-top: 28px;\n        }\n\n        .writing h4 {\n          font-size: 24px;\n          margin-top: 22px;\n        }\n\n        .writing p,\n        .writing ol {\n          font-size: 18px;\n          margin-top: 21px;\n        }\n\n        .writing blockquote {\n          font-size: 18px;\n          margin-top: 21px;\n        }\n\n        .writing .image {\n          margin-top: 21px;\n        }\n      }\n\n      .superscript {\n        color: #689f38;\n        font-size: 15px;\n        margin-left: 1px;\n        position: relative;\n        top: -6px;\n      }\n\n      .scripture-section {\n        border: 1px solid #bdbdbd;\n        margin-top: 20px;\n        padding: 5px 10px;\n      }\n\n      .scripture {\n        color: #bdbdbd;\n      }\n    `}</style>\n  </Container>\n);\n\nConfession.getInitialProps = ({ query }) => {\n  const { name, image_url, chapters } = LONDON_BAPTIST;\n\n  if (query.slug.indexOf(\"chapter-list\") !== -1) {\n    return {\n      chapterList: true,\n      name,\n      image_url,\n      chapters\n    };\n  }\n\n  const chapterIndex = findIndex(\n    chapters,\n    chapter => chapter.slug === query.slug\n  );\n\n  const chapter =\n    chapterIndex || chapterIndex === 0 ? chapters[chapterIndex] : {};\n\n  return {\n    name: name,\n    image_url: image_url,\n    ...chapter,\n    previous: chapters[chapterIndex - 1],\n    next: chapters[chapterIndex + 1]\n  };\n};\n\nexport default Confession;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAOA;AAGA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAOA;AAAA;AAGA;AAEA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAMA;AACA;AAFA;AAAA;AAOA;AAGA;AACA;AALA;AAQA;AAAA;AAGA;AAGA;AACA;AAFA;AAQA;AAGA;AACA;AAFA;AAbA;AAyBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAWA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAOA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAMA;AAAA;AACA;AAAA;AAKA;AAEA;AAAA;AACA;AAAA;AAKA;AAKA;AAGA;AACA;AAFA;AAQA;AAGA;AACA;AAFA;AAbA;AAhHA;AAAA;AAAA;AAXA;AACA;AAmSA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AAAA;AAGA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AALA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}