{"version":3,"file":"static/webpack/static/development/pages/admin.js.22687f9645ce9c79927d.hot-update.js","sources":["webpack:///./pages/admin.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport keyBy from \"lodash/keyBy\";\n\nimport { Container } from \"../components/Container\";\nimport { createAmpGlobalStyle } from \"../components/GlobalStyle\";\nimport AdminStyles from \"../components/AdminStyles\";\nimport Login from \"../components/Login\";\nimport AdminMain from \"../components/AdminMain\";\nimport PostEditor from \"../components/PostEditor\";\nimport TagEditor from \"../components/TagEditor\";\n\nconst Admin = () => {\n  let [state, dispatch] = useReducer(\n    (state, { type, payload }) => {\n      switch (type) {\n        case \"ON_LOGIN_SUCCESS\":\n          return {\n            ...state,\n            ...payload\n          };\n        case \"ON_FETCH_SUCCESS\":\n          return {\n            ...state,\n            ...payload\n          };\n        case \"ON_SET_POST\":\n          return {\n            ...state,\n            ...payload\n          };\n        case \"ON_SET_TAG\":\n          return {\n            ...state,\n            ...payload\n          };\n        default:\n          return state;\n      }\n    },\n    {\n      headers: {},\n      loggedIn: false,\n      post: null,\n      posts: [],\n      postsBySlug: {},\n      tag: null,\n      tags: []\n    }\n  );\n\n  const { headers, post, posts, postsBySlug, tag, tags } = state;\n\n  const onLoginSuccess = token => {\n    onFetchPostsTags();\n\n    localStorage.setItem(\"bible-answers-token\", token);\n\n    dispatch({\n      type: \"ON_LOGIN_SUCCESS\",\n      payload: {\n        headers: {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        },\n        loggedIn: true\n      }\n    });\n  };\n\n  const onFetchPostsTags = () => {\n    return axios\n      .get(\"https://bibleanswersapi.herokuapp.com/initialfetch\")\n      .then(response => {\n        const postsBySlug = keyBy(response.data.posts, \"slug\");\n\n        const localStoragePost = localStorage.getItem(\"bible-answers-post\");\n\n        const post = localStoragePost ? postsBySlug[localStoragePost] : null;\n\n        dispatch({\n          type: \"ON_FETCH_SUCCESS\",\n          payload: {\n            post,\n            postsBySlug,\n            posts: response.data.posts,\n            tags: response.data.tags\n          }\n        });\n      });\n  };\n\n  const onSetPost = post => {\n    if (post) {\n      localStorage.setItem(\"bible-answers-post\", post.slug);\n    } else {\n      localStorage.setItem(\"bible-answers-post\", null);\n    }\n\n    dispatch({\n      type: \"ON_SET_POST\",\n      payload: { post }\n    });\n  };\n\n  const onSetTag = tag => {\n    dispatch({\n      type: \"ON_SET_TAG\",\n      payload: { tag }\n    });\n  };\n\n  if (!state.loggedIn) {\n    return <Login onLoginSuccess={onLoginSuccess} />;\n  }\n\n  let content;\n\n  if (post) {\n    content = (\n      <PostEditor\n        headers={headers}\n        onFetchPostsTags={onFetchPostsTags}\n        onSetPost={onSetPost}\n        post={post}\n        tags={tags}\n      />\n    );\n  } else if (tag) {\n    content = (\n      <TagEditor\n        headers={headers}\n        onFetchPostsTags={onFetchPostsTags}\n        onSetTag={onSetTag}\n        {...tag}\n      />\n    );\n  } else if (posts.length) {\n    content = (\n      <AdminMain\n        headers={headers}\n        onFetchPostsTags={onFetchPostsTags}\n        onSetPost={onSetPost}\n        onSetTag={onSetTag}\n        posts={posts}\n        postsBySlug={postsBySlug}\n        tags={tags}\n      />\n    );\n  } else {\n    content = (\n      <img\n        src=\"https://i.imgur.com/P7fXP4s.gif\"\n        style={{ height: 30, width: 30 }}\n      />\n    );\n  }\n\n  const AmpGlobalStyle = createAmpGlobalStyle(\n    \"resurrection-narratives-harmony\"\n  );\n\n  return (\n    <Container>\n      <title>Admin</title>\n      <AmpGlobalStyle />\n      <AdminStyles />\n      {content}\n\n      <style jsx>{`\n        .writing h3 {\n          font-size: 34px;\n          line-height: 1.15;\n          margin: 0;\n          margin-top: 56px;\n        }\n\n        .writing h4 {\n          font-size: 26px;\n          line-height: 1.22;\n          margin: 0;\n          margin-top: 30px;\n        }\n\n        .writing h3 + p,\n        .writing h3 + ol,\n        .writing h3 + ul,\n        .writing h3 + blockquote,\n        .writing h4 + p,\n        .writing h4 + ol,\n        .writing h4 + ul,\n        .writing h4 + blockquote {\n          margin-top: 8px;\n        }\n\n        .writing p,\n        .writing ol,\n        .writing ul,\n        .writing blockquote {\n          font-size: 21px;\n          line-height: 1.58;\n          margin: 0;\n          margin-top: 29px;\n        }\n\n        .writing ol,\n        .writing ul {\n          padding: 0 40px;\n        }\n\n        .writing li {\n          margin-bottom: 10px;\n        }\n\n        .writing li:last-child {\n          margin-bottom: 0;\n        }\n\n        .writing blockquote {\n          border-left: 3px solid rgba(0, 0, 0, 0.84);\n          font-style: italic;\n          left: -20px;\n          padding-left: 20px;\n          position: relative;\n        }\n\n        .writing .first {\n          margin-top: 8px;\n        }\n\n        .writing .nomargin {\n          margin-top: 0;\n        }\n\n        .writing .indent {\n          margin-left: 20px;\n        }\n\n        .writing .image {\n          margin-top: 29px;\n        }\n\n        .writing .image-left {\n          float: left;\n          margin-right: 20px;\n        }\n\n        .writing .image-right {\n          float: right;\n          margin-left: 20px;\n        }\n\n        .writing a {\n          color: #689f38;\n          text-decoration: none;\n        }\n\n        .writing .scripture {\n          color: #039be5;\n        }\n\n        .writing .reference {\n          font-size: 14px;\n          margin-left: 2px;\n          position: relative;\n          top: -5px;\n        }\n\n        @media screen and (max-width: 768px) {\n          .writing h3 {\n            font-size: 30px;\n            margin-top: 28px;\n          }\n\n          .writing h4 {\n            font-size: 24px;\n            margin-top: 22px;\n          }\n\n          .writing p,\n          .writing ol {\n            font-size: 18px;\n            margin-top: 21px;\n          }\n\n          .writing blockquote {\n            font-size: 18px;\n            margin-top: 21px;\n          }\n\n          .writing .image {\n            margin-top: 21px;\n          }\n        }\n      `}</style>\n    </Container>\n  );\n};\n\nexport default Admin;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAtBA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AA5BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAwCA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AANA;AAFA;AAWA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAsIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}